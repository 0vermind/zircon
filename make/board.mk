# Copyright 2018 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

ifeq ($(PLATFORM_VID),)
$(error PLATFORM_VID not defined)
endif
ifeq ($(PLATFORM_PID),)
$(error PLATFORM_PID not defined)
endif
ifeq ($(PLATFORM_BOARD_NAME),)
$(error PLATFORM_BOARD_NAME not defined)
endif
ifeq ($(PLATFORM_MDI_SRCS),)
$(error PLATFORM_MDI_SRCS not defined)
endif

BOARD_MDI := $(BUILDDIR)/$(PLATFORM_BOARD_NAME)-mdi.bin
BOARD_PLATFORM_ID := --vid $(PLATFORM_VID) --pid $(PLATFORM_PID) --board $(PLATFORM_BOARD_NAME)
BOARD_ZIRCON := $(BUILDDIR)/$(PLATFORM_BOARD_NAME)-zircon.bin
BOARD_ZIRCON_TMP := $(BUILDDIR)/$(PLATFORM_BOARD_NAME)-zircon.tmp
BOARD_KERNEL_BOOTDATA := $(BUILDDIR)/$(PLATFORM_BOARD_NAME)-kernel-bootdata.bin

$(BOARD_MDI): PLATFORM_MDI_SRCS:=$(PLATFORM_MDI_SRCS)
$(BOARD_ZIRCON): BOARD_MDI:=$(BOARD_MDI)
$(BOARD_ZIRCON): BOARD_ZIRCON:=$(BOARD_ZIRCON)
$(BOARD_ZIRCON): BOARD_ZIRCON_TMP:=$(BOARD_ZIRCON_TMP)
$(BOARD_ZIRCON): BOARD_PLATFORM_ID:=$(BOARD_PLATFORM_ID)
$(BOARD_ZIRCON): USE_LEGACY_LOADER:=$(USE_LEGACY_LOADER)
$(BOARD_ZIRCON): PLATFORM_CMDLINE:=$(PLATFORM_CMDLINE)
$(BOARD_KERNEL_BOOTDATA): BOARD_MDI:=$(BOARD_MDI)
$(BOARD_KERNEL_BOOTDATA): BOARD_PLATFORM_ID:=$(BOARD_PLATFORM_ID)

# rule for building MDI binary blob
$(BOARD_MDI): $(MDIGEN) $(PLATFORM_MDI_SRCS) $(MDI_INCLUDES)
	$(call BUILDECHO,generating $@)
	@$(MKDIR)
	$(NOECHO)$(MDIGEN) -o $@ $(PLATFORM_MDI_SRCS)

GENERATED += $(BOARD_MDI)
EXTRA_BUILDDEPS += $(BOARD_MDI)

ifeq ($(USE_LEGACY_LOADER),true)
$(BOARD_ZIRCON_TMP): $(MKBOOTFS) $(OUTLKBIN) $(BOARD_MDI) $(USER_BOOTDATA) $(PLATFORM_CMDLINE)
	@$(MKDIR)
	$(NOECHO)$(MKBOOTFS) $(BOARD_PLATFORM_ID) -o $@ $(OUTLKBIN) $(BOARD_MDI) $(USER_BOOTDATA) -C $(PLATFORM_CMDLINE)

$(BOARD_ZIRCON): $(LEGACY_LOADER_BIN) $(BOARD_ZIRCON_TMP)
	$(call BUILDECHO,generating $@)
	$(NOECHO)cat $(LEGACY_LOADER_BIN) $(BOARD_ZIRCON_TMP) > $(BOARD_ZIRCON)
else
# full bootdata for standalone zircon build
$(BOARD_ZIRCON): $(MKBOOTFS) $(OUTLKBIN) $(BOARD_MDI) $(USER_BOOTDATA) $(PLATFORM_CMDLINE)
	$(call BUILDECHO,generating $@)
	@$(MKDIR)
	$(NOECHO)$(MKBOOTFS) $(BOARD_PLATFORM_ID) -o $@ $(OUTLKBIN) $(BOARD_MDI) $(USER_BOOTDATA) -C $(PLATFORM_CMDLINE)
endif

# kernel bootdata for fuchsia build
$(BOARD_KERNEL_BOOTDATA): $(MKBOOTFS) $(BOARD_MDI)
	$(call BUILDECHO,generating $@)
	@$(MKDIR)
	$(NOECHO)$(MKBOOTFS) -o $@ $(BOARD_PLATFORM_ID) $(BOARD_MDI)

kernel-only: $(BOARD_KERNEL_BOOTDATA)
kernel: $(KERNEL_BOOTDATA)

GENERATED += $(BOARD_ZIRCON) $(BOARD_KERNEL_BOOTDATA)
EXTRA_BUILDDEPS += $(BOARD_ZIRCON) $(BOARD_KERNEL_BOOTDATA)

# clear variables passed in
PLATFORM_VID :=
PLATFORM_PID :=
PLATFORM_BOARD_NAME :=
PLATFORM_MDI_SRCS :=
USE_LEGACY_LOADER :=
PLATFORM_CMDLINE :=

# clear variables we set here
BOARD_MDI :=
BOARD_ZIRCON :=
BOARD_KERNEL_BOOTDATA :=
BOARD_PLATFORM_ID :=

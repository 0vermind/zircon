#!/usr/bin/env bash

# Copyright 2017 The Fuchsia Authors
#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

header() {
  echo "// This file is generated by $0.  DO NOT EDIT."
  echo
  echo '#include <stdint.h>'
  echo '#include "vdso-code.h"'
  echo
  echo "\
struct VDso::ValidSyscallPC {
"
}

footer() {
  echo '};'
}

scan() {
  local define symbol reset syscall caller
  local -A syscall_callers

  while read define symbol rest; do
    case "$symbol" in
    VDSO_CODE_SYSRET_*) ;;
    *) continue ;;
    esac

    syscall="${symbol#VDSO_CODE_SYSRET_mx_}"
    caller="${syscall#*_VIA_}"
    syscall="${syscall%_VIA_*}"
    syscall_callers[$syscall]+=" $caller"
  done

  for syscall in "${!syscall_callers[@]}"; do
    echo "\
    static bool ${syscall}(uintptr_t offset) {
        switch (offset) {\
"
    for caller in ${syscall_callers[$syscall]}; do
      echo "\
        case VDSO_CODE_SYSRET_mx_${syscall}_VIA_${caller} - VDSO_CODE_START:
            return true;\
"
    done
    echo "\
        }
        return false;
    }
"
  done
}

set -e
header
scan < "$1"
footer

# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/cpp/sdk_source_set.gni")

config("async_config") {
  include_dirs = [ "include" ]
}

sdk_source_set("async") {
  # Don't forget to update rules.mk as well for the Zircon build.
  sources = [
    "include/async/dispatcher.h",
    "include/async/receiver.h",
    "include/async/task.h",
    "include/async/wait.h",
  ]

  libs = [ "zircon" ]

  public_configs = [ ":async_config" ]
}

sdk_source_set("cpp") {
  # Don't forget to update rules.mk as well for the Zircon build.
  sources = [
    "auto_task.cpp",
    "auto_wait.cpp",
    "include/async/cpp/auto_task.h",
    "include/async/cpp/auto_wait.h",
    "include/async/cpp/receiver.h",
    "include/async/cpp/task.h",
    "include/async/cpp/wait.h",
    "include/async/cpp/wait_with_timeout.h",
    "receiver.cpp",
    "task.cpp",
    "wait.cpp",
    "wait_with_timeout.cpp",
  ]

  libs = [ "zircon" ]

  public_deps = [
    ":async",
    "//zircon/system/ulib/fbl",
  ]

  public_configs = [ ":async_config" ]
}

sdk_source_set("default") {
  # Don't forget to update rules.mk as well for the Zircon build.
  sources = [
    "include/async/default.h",
  ]

  libs = [ "async-default" ]

  public_deps = [
    ":async",
  ]
}

sdk_source_set("loop") {
  # Don't forget to update rules.mk as well for the Zircon build.
  sources = [
    "include/async/loop.h",
    "loop.c",
  ]

  defines = [ "_ALL_SOURCE=1" ]

  public_deps = [
    ":default",
  ]
}

sdk_source_set("loop_cpp") {
  # Don't forget to update rules.mk as well for the Zircon build.
  sources = [
    "include/async/cpp/loop.h",
    "loop_wrapper.cpp",
  ]

  defines = [ "_ALL_SOURCE=1" ]

  public_deps = [
    ":default",
    ":loop",
    "//zircon/system/ulib/fbl",
  ]
}

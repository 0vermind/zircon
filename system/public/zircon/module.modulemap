// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Unlike the Libc module map, this one does not explictly "export *" any
// symbols up the parent module requiring that you explictly import what
// modules you are using. For that reason module names in this file can break
// imports in langauges that can refernece them directly.
module Zircon [system] [extern_c] {
  use Libc

  textual header "assert.h"
  textual header "compiler.h"

  module crashlogger [extern_c] {
    header "crashlogger.h"
  }

  module errors [extern_c] {
    header "errors.h"
  }

  module ktrace [extern_c] {
    header "ktrace.h"
    private header "ktrace-def.h"
  }

  module listnode [extern_c] {
    header "listnode.h"
  }

  module mdi [extern_c] {
    header "mdi.h"
  }

  module mtrace [extern_c] {
    header "mtrace.h"
  }

  module pixelformat [extern_c] {
    header "pixelformat.h"
  }

  module process [extern_c] {
    header "process.h"
  }

  module processargs [extern_c] {
    header "processargs.h"
  }

  module rights [extern_c] {
    header "rights.h"
  }

  module syscalls [extern_c] {
    // This module refers to both the "syscalls.h" in the root and all of the
    // headers in the "syscalls" folder.

    module debug {
      header "syscalls/debug.h"
      // explictly require you include this if you use it.
    }
    module exception {
      header "syscalls/exception.h"
      export *
    }
    module hypervisor {
      header "syscalls/hypervisor.h"
      export *
    }
    module log {
      header "syscalls/log.h"
      export *
    }
    module object {
      header "syscalls/object.h"
      export *
    }
    module pci {
      header "syscalls/pci.h"
      export *
    }
    module policy {
      header "syscalls/policy.h"
      export *
    }
    module port {
      header "syscalls/port.h"
      export *
    }
    module resource {
      header "syscalls/resource.h"
      export *
    }
    module system {
      header "syscalls/system.h"
      export *
    }
    module types {
      header "syscalls/types.h"
      export *
    }

    header "syscalls.h"
  }

  module tls [extern_c] {
    header "tls.h"
  }

  module types [extern_c] {
    header "types.h"
  }

  module boot [extern_c] {
    module bootdata {
      header "boot/bootdata.h"
    }
    module multiboot {
      header "boot/multiboot.h"
    }
    module netboot {
      header "boot/netboot.h"
    }
  }

  module device [extern_c] {
    // glob each header into it's own module decl
    umbrella "device"
    explicit module * {
      export *
    }
  }

  module driver [extern_c] {
    // glob each header into it's own module decl
    umbrella "driver"
    explicit module * {
      export *
    }
  }

  module hw [extern_c] {
    // glob each header into it's own module decl
    umbrella "hw"
    explicit module * {
      export *
    }
  }

  module misc [extern_c] {
    // glob each header into it's own module decl
    umbrella "misc"
    explicit module * {
      export *
    }
  }
}

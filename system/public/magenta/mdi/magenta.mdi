// MDI definitions for Magenta

// Top level nodes
list    kernel-drivers                          1
list    cpu-map                                 2
list    platform-bus                            3

// Common definitions
string  name                                    10
uint64  base-virt                               11  // virtual base address
uint64  base-phys                               12  // physical base address
uint32  irq                                     13  // IRQ number

// CPU topology
//string  cpu-map.clusters.name
list    cpu-map.clusters                        100
uint8   cpu-map.clusters.cpu-count              101

// platform-bus nodes
list    platform-bus.device                     200
//string  platform-bus.device.name
uint32  platform-bus.device.vid                 201
uint32  platform-bus.device.pid                 202
uint32  platform-bus.device.did                 203

// Kernel Drivers

// ARM PSCI driver
list    kernel-drivers.arm-psci                 1000
boolean kernel-drivers.arm-psci.use-smc         1001
boolean kernel-drivers.arm-psci.use-hvc         1002

// ARM gic v3 driver
list    kernel-drivers.arm-gic-v3               1010
// TODO:(hollande) We use virt since peripherals
//       should be accessed via a device memory mapping and presently
//       we do not have mechanisms in kernel for converting phys address
//       to peripheral address.  For now this requires keeping the base-virt
//       definition consistent with the PERIPH_BASE_VIRT definition in
//       the targets rules.mk
// GIC V3 uses base-virt
// uint64  kernel-drivers.arm-gic-v3.base-virt
uint64  kernel-drivers.arm-gic-v3.gicd-offset   1011
uint64  kernel-drivers.arm-gic-v3.gicr-offset   1012
uint64  kernel-drivers.arm-gic-v3.gicr-stride   1013
uint32  kernel-drivers.arm-gic-v3.ipi-base      1014
uint64  kernel-drivers.arm-gic-v3.base-phys     1015

// ARM generic timer driver
list    kernel-drivers.arm-generic-timer                1030
uint32  kernel-drivers.arm-generic-timer.irq-phys       1031 // for using physical timer
uint32  kernel-drivers.arm-generic-timer.irq-virt       1032 // for using virtual timer
uint32  kernel-drivers.arm-generic-timer.irq-sphys      1033 // for using secure physical timer
uint32  kernel-drivers.arm-generic-timer.freq-override  1034 // optional

// bcm28xx drivers
list    kernel-drivers.bcm28xx-interrupt        1040
list    kernel-drivers.bcm28xx-uart             1041

// pl011 uart
list    kernel-drivers.pl011-uart               1050
// pl011 driver uses base-virt, base-phys and IRQ
// TODO:(hollande) See note above re: phys/virt

// qemu drivers
list    kernel-drivers.qemu-pcie                1054

// ARM gicv2 driver
list    kernel-drivers.arm-gic-v2               1060
// ARM gicv2 also uses base-virt and base-phys
// TODO:(hollande) See note above re: phys/virt
uint64  kernel-drivers.arm-gic-v2.gicd-offset   1061
uint64  kernel-drivers.arm-gic-v2.gicc-offset   1062
uint32  kernel-drivers.arm-gic-v2.ipi-base      1063
uint64  kernel-drivers.arm-gic-v2.msi-frame-phys 1064
